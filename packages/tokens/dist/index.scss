////
/// Autogenerated by â›‹ Terrazzo. DO NOT EDIT!
////

@use "sass:list";
@use "sass:map";

$__token-values: (
  "color.base.blue.100": var(--tz-color-base-blue-100),
  "color.base.blue.200": var(--tz-color-base-blue-200),
  "color.base.blue.300": var(--tz-color-base-blue-300),
  "color.base.blue.600": var(--tz-color-base-blue-600),
  "color.base.blue.800": var(--tz-color-base-blue-800),
  "color.base.blue.900": var(--tz-color-base-blue-900),
  "color.base.blue.1000": var(--tz-color-base-blue-1000),
  "color.base.green.100": var(--tz-color-base-green-100),
  "color.base.green.200": var(--tz-color-base-green-200),
  "color.base.green.300": var(--tz-color-base-green-300),
  "color.base.green.400": var(--tz-color-base-green-400),
  "color.base.green.500": var(--tz-color-base-green-500),
  "color.base.green.600": var(--tz-color-base-green-600),
  "color.base.green.700": var(--tz-color-base-green-700),
  "color.base.green.800": var(--tz-color-base-green-800),
  "color.base.green.900": var(--tz-color-base-green-900),
  "color.base.green.1000": var(--tz-color-base-green-1000),
  "color.base.green.1100": var(--tz-color-base-green-1100),
  "color.base.green.1200": var(--tz-color-base-green-1200),
  "color.base.gray.100": var(--tz-color-base-gray-100),
  "color.base.gray.200": var(--tz-color-base-gray-200),
  "color.base.gray.300": var(--tz-color-base-gray-300),
  "color.base.gray.600": var(--tz-color-base-gray-600),
  "color.base.gray.700": var(--tz-color-base-gray-700),
  "color.base.gray.800": var(--tz-color-base-gray-800),
  "color.base.gray.900": var(--tz-color-base-gray-900),
  "color.base.gray.1000": var(--tz-color-base-gray-1000),
  "color.base.lime.100": var(--tz-color-base-lime-100),
  "color.base.lime.200": var(--tz-color-base-lime-200),
  "color.base.lime.300": var(--tz-color-base-lime-300),
  "color.base.lime.600": var(--tz-color-base-lime-600),
  "color.base.lime.800": var(--tz-color-base-lime-800),
  "color.base.lime.900": var(--tz-color-base-lime-900),
  "color.base.lime.1000": var(--tz-color-base-lime-1000),
  "color.base.orange.100": var(--tz-color-base-orange-100),
  "color.base.orange.200": var(--tz-color-base-orange-200),
  "color.base.orange.300": var(--tz-color-base-orange-300),
  "color.base.orange.600": var(--tz-color-base-orange-600),
  "color.base.orange.800": var(--tz-color-base-orange-800),
  "color.base.orange.900": var(--tz-color-base-orange-900),
  "color.base.orange.1000": var(--tz-color-base-orange-1000),
  "color.bg.1": var(--tz-color-bg-1),
  "color.bg.2": var(--tz-color-bg-2),
  "color.bg.3": var(--tz-color-bg-3),
  "color.bg.selected-hint": var(--tz-color-bg-selected-hint),
  "color.bg.selected": var(--tz-color-bg-selected),
  "color.bg.error": var(--tz-color-bg-error),
  "color.text.1": var(--tz-color-text-1),
  "color.text.2": var(--tz-color-text-2),
  "color.text.3": var(--tz-color-text-3),
  "color.text.selected": var(--tz-color-text-selected),
  "color.text.error": var(--tz-color-text-error),
  "color.border.1": var(--tz-color-border-1),
  "color.border.2": var(--tz-color-border-2),
  "color.border.3": var(--tz-color-border-3),
  "color.border.focus": var(--tz-color-border-focus),
  "border.1": var(--tz-border-1),
  "border.2": var(--tz-border-2),
  "border.3": var(--tz-border-3),
  "border.focus": var(--tz-border-focus),
  "font.sans": var(--tz-font-sans),
  "font.mono": var(--tz-font-mono),
  "font.body": "__tz-error-typography",
  "font.bodyStrong": "__tz-error-typography",
  "font.bodyLongform": "__tz-error-typography",
  "font.labelSmall": "__tz-error-typography",
  "font.heading1": "__tz-error-typography",
  "font.heading2": "__tz-error-typography",
  "font.heading3": "__tz-error-typography",
  "font.heading4": "__tz-error-typography",
  "font.heading5": "__tz-error-typography",
  "font.heading6": "__tz-error-typography",
  "font.mtest-font-size-only": "__tz-error-typography",
  "font.mtest-font-family-only": "__tz-error-typography",
  "font.mtest-font-family-and-font-size": "__tz-error-typography",
  "font.mtest-family-size-line-height": "__tz-error-typography",
  "font.mtest-family-size-line-height-weight": "__tz-error-typography",
  "font.mtest-full": "__tz-error-typography",
  "ease.linear": var(--tz-ease-linear),
  "ease.quint-out": var(--tz-ease-quint-out),
  "ease.quint-in": var(--tz-ease-quint-in),
  "ease.quint-in-out": var(--tz-ease-quint-in-out),
  "radius.000": var(--tz-radius-000),
  "radius.100": var(--tz-radius-100),
  "radius.200": var(--tz-radius-200),
  "radius.300": var(--tz-radius-300),
  "radius.400": var(--tz-radius-400),
  "radius.500": var(--tz-radius-500),
  "radius.1000": var(--tz-radius-1000),
  "shadow.100": var(--tz-shadow-100),
  "shadow.300": var(--tz-shadow-300),
  "timing.quick": var(--tz-timing-quick),
  "timing.default": var(--tz-timing-default),
  "timing.moderate": var(--tz-timing-moderate),
  "timing.deliberate": var(--tz-timing-deliberate),
  "timing.slow": var(--tz-timing-slow),
  "layer.base": var(--tz-layer-base),
  "layer.tooltip": var(--tz-layer-tooltip),
  "layer.nav": var(--tz-layer-nav),
  "layer.popover": var(--tz-layer-popover),
  "layer.menu": var(--tz-layer-menu),
  "layer.modal": var(--tz-layer-modal),
  "space.000": var(--tz-space-000),
  "space.100": var(--tz-space-100),
  "space.200": var(--tz-space-200),
  "space.300": var(--tz-space-300),
  "space.400": var(--tz-space-400),
  "space.500": var(--tz-space-500),
  "space.600": var(--tz-space-600),
  "space.700": var(--tz-space-700),
  "space.800": var(--tz-space-800),
  "space.900": var(--tz-space-900),
  "space.control-s": var(--tz-space-control-s),
  "space.control-m": var(--tz-space-control-m)
);

$__token-typography-mixins: (
  "font.body": (
    "font-variation-settings": var(--tz-font-body-font-variation-settings),
    "font": var(--tz-font-body)
  ),
  "font.bodyStrong": (
    "font-variation-settings": var(--tz-font-body-strong-font-variation-settings),
    "font": var(--tz-font-body-strong)
  ),
  "font.bodyLongform": (
    "font-variation-settings": var(--tz-font-body-longform-font-variation-settings),
    "letter-spacing": var(--tz-font-body-longform-letter-spacing),
    "font": var(--tz-font-body-longform)
  ),
  "font.labelSmall": (
    "font-variation-settings": var(--tz-font-label-small-font-variation-settings),
    "letter-spacing": var(--tz-font-label-small-letter-spacing),
    "font": var(--tz-font-label-small)
  ),
  "font.heading1": (
    "font-variation-settings": var(--tz-font-heading1-font-variation-settings),
    "letter-spacing": var(--tz-font-heading1-letter-spacing),
    "font": var(--tz-font-heading1)
  ),
  "font.heading2": (
    "font-variation-settings": var(--tz-font-heading2-font-variation-settings),
    "letter-spacing": var(--tz-font-heading2-letter-spacing),
    "font": var(--tz-font-heading2)
  ),
  "font.heading3": (
    "font-variation-settings": var(--tz-font-heading3-font-variation-settings),
    "letter-spacing": var(--tz-font-heading3-letter-spacing),
    "font": var(--tz-font-heading3)
  ),
  "font.heading4": (
    "font-variation-settings": var(--tz-font-heading4-font-variation-settings),
    "letter-spacing": var(--tz-font-heading4-letter-spacing),
    "font": var(--tz-font-heading4)
  ),
  "font.heading5": (
    "font-variation-settings": var(--tz-font-heading5-font-variation-settings),
    "font": var(--tz-font-heading5)
  ),
  "font.heading6": (
    "font-variation-settings": var(--tz-font-heading6-font-variation-settings),
    "font": var(--tz-font-heading6)
  ),
  "font.mtest-font-size-only": (
    "font-size": var(--tz-font-mtest-font-size-only-font-size)
  ),
  "font.mtest-font-family-only": (
    "font-family": var(--tz-font-mtest-font-family-only-font-family)
  ),
  "font.mtest-font-family-and-font-size": (
    "font": var(--tz-font-mtest-font-family-and-font-size)
  ),
  "font.mtest-family-size-line-height": (
    "font": var(--tz-font-mtest-family-size-line-height)
  ),
  "font.mtest-family-size-line-height-weight": (
    "font": var(--tz-font-mtest-family-size-line-height-weight)
  ),
  "font.mtest-full": (
    "font": var(--tz-font-mtest-full)
  )
);

@function token($tokenName) {
  @if not map.has-key($__token-values, $tokenName) {
    @error 'No token named "#{$tokenName}"';
  }

  $token: map.get($__token-values, $tokenName);

  @if $token == "__tz-error-typography" {
    @error 'This is a typography mixin. Use `@include typography("#{tokenId}")` instead.';
  }

  @return map.get($token);
}

@mixin typography($tokenName) {
  @if not map.has-key($__token-typography-mixins, $tokenName) {
    @error 'No typography mixin named "#{$tokenName}"';
  }

  $mixin: map.get($__token-typography-mixins, $tokenName);

  @each $_property, $_value in $mixin {
    #{$_property}: #{$_value};
  }
}
